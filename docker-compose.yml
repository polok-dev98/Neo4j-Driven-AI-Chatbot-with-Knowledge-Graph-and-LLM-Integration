version: '3.8'

services:
  neo4j:
    image: neo4j:latest
    container_name: new_neo4j
    ports:
      - "7474:7474"  # Neo4j browser
      - "7687:7687"  # Bolt protocol
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/Vivasoft  # Neo4j username and password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use_neo4j_config=true  # Fixed typo (double underscores)
      - NEO4JLABS_PLUGINS=["apoc"]  # Install APOC plugin
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*  # Allow unrestricted APOC procedures
    volumes:
      - ./database_neo4j:/data  # Persist Neo4j data
      - ./plugins:/plugins  # Persist plugins
    networks:
      - my_bridge_network
    
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "Vivasoft", "RETURN 1;"]
      interval: 30s  # Check every 30 seconds
      retries: 3
      start_period: 30s  # Wait 30 seconds before starting checks
      timeout: 30s

  postgres:
    container_name: postgresql
    image: postgres:13.0-alpine
    environment:
      - POSTGRES_DB=agentpro_db
      - POSTGRES_USER=Vivasoft
      - POSTGRES_PASSWORD=Vivasoft2025
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ./postgres:/var/lib/postgresql/data  # Persist PostgreSQL data
    ports:
      - "54032:5432"  # Expose PostgreSQL port
    restart: unless-stopped
    networks:
      - my_bridge_network
    
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "Vivasoft"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
  
  pgadmin:
    container_name: pgadmin
    image: "dpage/pgadmin4:4.24"
    environment:
      PGADMIN_DEFAULT_EMAIL: vivasoft@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Vivasoft
    volumes:
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - "5433:80"
    restart: unless-stopped
    networks:
    - my_bridge_network

  app:
    container_name: banckend_app
    build:
      context: ./backend  # Path to your backend Dockerfile
      dockerfile: Dockerfile
    environment:
      - NEO4J_URI=bolt://new_neo4j:7687  # Use Bolt protocol for Neo4j connection
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=Vivasoft
      - PG_HOST=postgresql  # Use service name as hostname
      - PG_PORT=5432
      - PG_DBNAME=agentpro_db
      - PG_USER=Vivasoft
      - PG_PASSWORD=Vivasoft2025
    ports:
      - "5507:5507"  # Expose backend app port
    depends_on:
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my_bridge_network

  streamlit_app:
    container_name: frontend_app
    build:
      context: ./frontend  # Path to your frontend Dockerfile
      dockerfile: Dockerfile
    environment:
      - API_URL=http://banckend_app:5507  # Use backend app service name as hostname
    ports:
      - "5508:5508"  # Expose frontend app port
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - my_bridge_network


networks:
  my_bridge_network:
    driver: bridge